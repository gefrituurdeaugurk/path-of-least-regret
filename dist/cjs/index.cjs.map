{
  "version": 3,
  "sources": ["../../lib/api.js", "../../lib/math.js", "../../lib/triangulate.js", "../../lib/navmesh.js", "../../lib/helpers.js", "../../lib/validate.js"],
  "sourcesContent": ["// Public API (ESM)\nimport { V, triArea2, area, isCCW, centroidTriangle } from './math.js';\nimport { triangulate } from './triangulate.js';\nimport { buildAdjacency, findTriIdContaining, aStarTriangle, portalsFromTriPath, funnel, computeCentroids } from './navmesh.js';\nimport { polyCentroid, nudgeInside, closestPointOnBoundary } from './helpers.js';\nimport { validatePolygon, ValidationErrorCodes } from './validate.js';\n\nexport const ErrorCodes = {\n  OUTSIDE_POLY: 'OUTSIDE_POLY',\n  NO_PATH: 'NO_PATH',\n  ...ValidationErrorCodes\n};\n\nfunction smoothPathChaikin(path, iterations=1){\n  if(!path || path.length<3) return path;\n  let pts=path.slice();\n  for(let k=0;k<iterations;k++){\n    const next=[pts[0]];\n    for(let i=0;i<pts.length-1;i++){\n      const a=pts[i], b=pts[i+1];\n      next.push({ x: 0.75*a.x + 0.25*b.x, y: 0.75*a.y + 0.25*b.y });\n      next.push({ x: 0.25*a.x + 0.75*b.x, y: 0.25*a.y + 0.75*b.y });\n    }\n    next.push(pts[pts.length-1]);\n    pts=next;\n  }\n  return pts;\n}\n\nfunction buildNavMesh(polygon, opts={}){\n  const { validate=true, includeDebug=false } = opts;\n  const errors = validate ? validatePolygon(polygon) : [];\n  if(errors.length && opts.errorMode==='code'){\n    return { ok:false, code: errors[0].code, errors };\n  }\n  const cleaned = polygon.slice();\n  if(!isCCW(cleaned)) cleaned.reverse();\n  const tris = triangulate(cleaned);\n  const adj = buildAdjacency(tris);\n  const triCentroids = computeCentroids(tris);\n  return { polygon: cleaned, tris, adj, centroids: triCentroids, ...(includeDebug?{ debug:{ tris, adj } }:{}) };\n}\n\nfunction findPath(mesh, start, end, opts={}){\n  const { smooth=false, smoothIterations=1, snapNudge=0.5, errorMode='throw' } = opts;\n  const inPolyStart = findTriIdContaining(start, mesh.tris);\n  const inPolyEnd = findTriIdContaining(end, mesh.tris);\n  if(inPolyStart == null || inPolyEnd == null){\n    const code = ErrorCodes.OUTSIDE_POLY;\n    if(errorMode==='code') return { ok:false, code };\n    throw Object.assign(new Error('Point outside polygon'), { code });\n  }\n  if(inPolyStart === inPolyEnd){\n    const path=[start,end];\n    return { ok:true, path: smooth ? smoothPathChaikin(path, smoothIterations): path };\n  }\n  // Correct order: (startId, goalId, triangles, adjacency, centroids)\n  const triPath = aStarTriangle(inPolyStart, inPolyEnd, mesh.tris, mesh.adj, mesh.centroids);\n  if(!triPath || !triPath.length){\n    const code = ErrorCodes.NO_PATH;\n    if(errorMode==='code') return { ok:false, code };\n    throw Object.assign(new Error('No path'), { code });\n  }\n  const portals = portalsFromTriPath(triPath, mesh.tris, start, end);\n  let path = funnel(start, portals);\n  if(snapNudge && path.length){\n    path[0] = nudgeInside(path[0], mesh.polygon, snapNudge);\n    path[path.length-1] = nudgeInside(path[path.length-1], mesh.polygon, snapNudge);\n  }\n  if(smooth) path = smoothPathChaikin(path, smoothIterations);\n  return { ok:true, path, triPath, portals };\n}\n\nfunction updatePolygon(meshRef, newPoly, opts={}){\n  // basic diff: if length or any coordinate differs, rebuild\n  const old=meshRef.polygon;\n  let changed = old.length!==newPoly.length;\n  if(!changed){\n    for(let i=0;i<old.length;i++){ const a=old[i], b=newPoly[i]; if(a.x!==b.x || a.y!==b.y){ changed=true; break; } }\n  }\n  if(!changed) return { changed:false, mesh: meshRef };\n  const rebuilt = buildNavMesh(newPoly, opts);\n  Object.assign(meshRef, rebuilt);\n  return { changed:true, mesh: meshRef };\n}\n\nfunction pathfind(polygon, start, end, opts={}){\n  const mesh = buildNavMesh(polygon, opts);\n  if(mesh.ok===false) return mesh; // validation error in code mode\n  return findPath(mesh, start, end, opts);\n}\n\nexport default {\n  buildNavMesh,\n  findPath,\n  pathfind,\n  updatePolygon,\n  ErrorCodes,\n  ValidationErrorCodes,\n  helpers: { polyCentroid, nudgeInside, closestPointOnBoundary },\n  math: { V, triArea2, area, isCCW, centroidTriangle }\n};\n\n// Note: ErrorCodes already exported above; re-exporting again can trigger duplicate export errors in some browsers.\nexport { V, buildNavMesh, findPath, pathfind, updatePolygon, ValidationErrorCodes, polyCentroid, nudgeInside, closestPointOnBoundary };\n", "// Vector utilities (library version)\nexport const V = {\n  add: (a, b) => ({ x: a.x + b.x, y: a.y + b.y }),\n  sub: (a, b) => ({ x: a.x - b.x, y: a.y - b.y }),\n  mul: (a, s) => ({ x: a.x * s, y: a.y * s }),\n  dot: (a, b) => a.x * b.x + a.y * b.y,\n  cross: (a, b) => a.x * b.y - a.y * b.x,\n  len: (a) => Math.hypot(a.x, a.y),\n  dist: (a, b) => Math.hypot(a.x - b.x, a.y - b.y),\n  norm: (a) => { const l = Math.hypot(a.x, a.y) || 1; return { x: a.x / l, y: a.y / l }; }\n};\nexport const triArea2 = (a, b, c) => V.cross(V.sub(b, a), V.sub(c, a));\nexport function area(poly){ let s=0; for(let i=0;i<poly.length;i++){ const a=poly[i], b=poly[(i+1)%poly.length]; s += a.x * b.y - b.x * a.y; } return s/2; }\nexport const isCCW = (poly) => area(poly) > 0;\nexport function centroidTriangle(t){ return { x:(t[0].x+t[1].x+t[2].x)/3, y:(t[0].y+t[1].y+t[2].y)/3 }; }\n", "import { isCCW, triArea2 } from './math.js';\nexport function triangulate(simplePoly){\n  const n = simplePoly.length; if(n<3) return [];\n  const verts = simplePoly.slice(); if(!isCCW(verts)) verts.reverse();\n  const result=[]; const Vlist=verts.slice();\n  function insideTri(p,a,b,c){ const b1=triArea2(p,a,b)<0, b2=triArea2(p,b,c)<0, b3=triArea2(p,c,a)<0; return (b1===b2)&&(b2===b3); }\n  let guard=0;\n  while(Vlist.length>3 && guard++<10000){\n    let ear=false;\n    for(let i=0;i<Vlist.length;i++){\n      const a=Vlist[(i-1+Vlist.length)%Vlist.length], b=Vlist[i], c=Vlist[(i+1)%Vlist.length];\n      if(triArea2(a,b,c) <= 0) continue;\n      let contains=false;\n      for(let j=0;j<Vlist.length;j++){ const p=Vlist[j]; if(p===a||p===b||p===c) continue; if(insideTri(p,a,b,c)){ contains=true; break; } }\n      if(contains) continue;\n      result.push([a,b,c]); Vlist.splice(i,1); ear=true; break;\n    }\n    if(!ear) break;\n  }\n  if(Vlist.length===3) result.push([Vlist[0],Vlist[1],Vlist[2]]);\n  return result;\n}\n", "import { triArea2, V, centroidTriangle } from './math.js';\nexport function buildAdjacency(tris){ const map=new Map(); tris.forEach((t,i)=>map.set(i,[])); const samePt=(p,q)=>p===q||(Math.abs(p.x-q.x)<1e-9&&Math.abs(p.y-q.y)<1e-9); const sameEdge=(e1,e2)=>(samePt(e1[0],e2[0])&&samePt(e1[1],e2[1]))||(samePt(e1[0],e2[1])&&samePt(e1[1],e2[0])); const edgesOf=t=>[[t[0],t[1]],[t[1],t[2]],[t[2],t[0]]]; for(let i=0;i<tris.length;i++){ for(let j=i+1;j<tris.length;j++){ const ea=edgesOf(tris[i]), eb=edgesOf(tris[j]); for(const A of ea){ for(const B of eb){ if(sameEdge(A,B)){ map.get(i).push({to:j,edge:A}); map.get(j).push({to:i,edge:B}); } } } } } return map; }\nexport function pointInTri(p,tri){ const [a,b,c]=tri; const s1=triArea2(p,a,b), s2=triArea2(p,b,c), s3=triArea2(p,c,a); const eps=1e-6; const b1=s1<-eps,b2=s2<-eps,b3=s3<-eps; const z1=Math.abs(s1)<=eps,z2=Math.abs(s2)<=eps,z3=Math.abs(s3)<=eps; return (b1===b2&&b2===b3)||z1||z2||z3; }\nexport function findTriIdContaining(p, triangles){ for(let i=0;i<triangles.length;i++) if(pointInTri(p,triangles[i])) return i; return null; }\nexport function aStarTriangle(startId, goalId, triangles, adj, centroids){ if(startId==null||goalId==null) return null; const C=centroids||triangles.map(t=>centroidTriangle(t)); const open=new Set([startId]); const came=new Map(); const g=new Map([[startId,0]]); const f=new Map([[startId,V.dist(C[startId],C[goalId])]]); const pick=()=>{ let best=null,bv=Infinity; for(const n of open){ const v=f.get(n)??Infinity; if(v<bv){ bv=v; best=n; } } return best; }; while(open.size){ const cur=pick(); if(cur===goalId){ const ids=[cur]; let c=cur; while(came.has(c)){ c=came.get(c); ids.push(c);} return ids.reverse(); } open.delete(cur); for(const e of adj.get(cur)){ const alt=(g.get(cur)??Infinity)+V.dist(C[cur],C[e.to]); if(alt<(g.get(e.to)??Infinity)){ came.set(e.to,cur); g.set(e.to,alt); f.set(e.to,alt+V.dist(C[e.to],C[goalId])); open.add(e.to); } } } return null; }\nconst samePt=(p,q)=>p===q||(Math.abs(p.x-q.x)<1e-9&&Math.abs(p.y-q.y)<1e-9); function thirdVertex(tri,edge){ return tri.find(p=>p!==edge[0]&&p!==edge[1]); } function edgesOfTri(t){ return [[t[0],t[1]],[t[1],t[2]],[t[2],t[0]]]; } function orientedPortal(currTri,sharedEdge){ const a=sharedEdge[0], b=sharedEdge[1], q=thirdVertex(currTri,sharedEdge); return triArea2(a,b,q)>0?{left:{x:a.x,y:a.y}, right:{x:b.x,y:b.y}}:{left:{x:b.x,y:b.y}, right:{x:a.x,y:a.y}}; }\nexport function portalsFromTriPath(triPath, triangles, start, end){ const P=[]; for(let i=0;i<triPath.length-1;i++){ const curr=triangles[triPath[i]], next=triangles[triPath[i+1]]; const ea=edgesOfTri(curr), eb=edgesOfTri(next); let shared=null; outer: for(const A of ea){ for(const B of eb){ if((A[0]===B[0]&&A[1]===B[1])||(A[0]===B[1]&&A[1]===B[0])||(samePt(A[0],B[0])&&samePt(A[1],B[1]))||(samePt(A[0],B[1])&&samePt(A[1],B[0]))){ shared=A; break outer; } } } if(shared) P.push(orientedPortal(curr,shared)); } P.push({left:{x:end.x,y:end.y}, right:{x:end.x,y:end.y}}); return P; }\nexport function funnel(start, portals){ const EPS=1e-6; const out=[{x:start.x,y:start.y}]; let apex={x:start.x,y:start.y}; let left={x:portals[0].left.x,y:portals[0].left.y}; let right={x:portals[0].right.x,y:portals[0].right.y}; let ai=0,li=0,ri=0; function area(a,b,c){ return triArea2(a,b,c);} function veq(a,b){ return Math.abs(a.x-b.x)<=EPS&&Math.abs(a.y-b.y)<=EPS; } for(let i=1;i<portals.length;i++){ const pL=portals[i].left,pR=portals[i].right; if(area(apex,right,pR)<=EPS){ if(veq(apex,right)||area(apex,left,pR)>EPS){ right={x:pR.x,y:pR.y}; ri=i; } else { out.push({x:left.x,y:left.y}); apex={x:left.x,y:left.y}; ai=li; left={x:apex.x,y:apex.y}; right={x:apex.x,y:apex.y}; li=ai; ri=ai; i=ai; continue; } } if(area(apex,left,pL)>=-EPS){ if(veq(apex,left)||area(apex,right,pL)<-EPS){ left={x:pL.x,y:pL.y}; li=i; } else { out.push({x:right.x,y:right.y}); apex={x:right.x,y:right.y}; ai=ri; left={x:apex.x,y:apex.y}; right={x:apex.x,y:apex.y}; li=ai; ri=ai; i=ai; continue; } } } const last=portals[portals.length-1].left; if(!out.length||!samePt(out[out.length-1], last)) out.push({x:last.x,y:last.y}); return out; }\nexport function computeCentroids(triangles){ return triangles.map(t=>centroidTriangle(t)); }\n", "import { V } from './math.js';\nexport function polyCentroid(poly){ let A=0,cx=0,cy=0; for(let i=0;i<poly.length;i++){ const p=poly[i], q=poly[(i+1)%poly.length]; const w=p.x*q.y - q.x*p.y; A+=w; cx += (p.x+q.x)*w; cy += (p.y+q.y)*w; } A=A*0.5||1; return { x: cx/(6*A), y: cy/(6*A)}; }\nexport function nudgeInside(p, poly, d=0.5){ const c=polyCentroid(poly); const vx=c.x-p.x, vy=c.y-p.y; const L=Math.hypot(vx,vy)||1; return { x: p.x + (vx/L)*d, y: p.y + (vy/L)*d }; }\nexport function closestPointOnSegment(p,a,b){ const ab={x:b.x-a.x,y:b.y-a.y}; const t=Math.max(0,Math.min(1, ((p.x-a.x)*ab.x + (p.y-a.y)*ab.y)/(ab.x*ab.x + ab.y*ab.y || 1))); return { x:a.x+ab.x*t, y:a.y+ab.y*t }; }\nexport function closestPointOnBoundary(p, poly){ if(!poly||poly.length<2) return p; let best=null, bd=Infinity; for(let i=0;i<poly.length;i++){ const a=poly[i], b=poly[(i+1)%poly.length]; const q=closestPointOnSegment(p,a,b); const d=V.dist(p,q); if(d<bd){ bd=d; best=q; } } return best||p; }\n", "// Polygon validation utilities\nexport const ValidationErrorCodes = {\n  NOT_ENOUGH_VERTICES: 'NOT_ENOUGH_VERTICES',\n  DUPLICATE_ADJACENT_VERTEX: 'DUPLICATE_ADJACENT_VERTEX',\n  SELF_INTERSECTION: 'SELF_INTERSECTION'\n};\n\nexport function validatePolygon(poly){\n  const errors=[];\n  if(!Array.isArray(poly) || poly.length<3){\n    errors.push({ code: ValidationErrorCodes.NOT_ENOUGH_VERTICES, message: 'Polygon must have at least 3 vertices' });\n    return errors;\n  }\n  // duplicate adjacent\n  for(let i=0;i<poly.length;i++){\n    const a=poly[i], b=poly[(i+1)%poly.length];\n    if(a.x===b.x && a.y===b.y){\n      errors.push({ code: ValidationErrorCodes.DUPLICATE_ADJACENT_VERTEX, message: `Duplicate adjacent vertex at index ${i}` });\n      break;\n    }\n  }\n  // simple self intersection check (O(n^2))\n  function segInt(a,b,c,d){\n    function orient(p,q,r){ return (q.x-p.x)*(r.y-p.y)-(q.y-p.y)*(r.x-p.x); }\n    const o1=orient(a,b,c), o2=orient(a,b,d), o3=orient(c,d,a), o4=orient(c,d,b);\n    if(o1===0 && o2===0 && o3===0 && o4===0) return false; // collinear skip\n    return o1*o2<0 && o3*o4<0;\n  }\n  for(let i=0;i<poly.length;i++){\n    const a=poly[i], b=poly[(i+1)%poly.length];\n    for(let j=i+1;j<poly.length;j++){\n      if(Math.abs(i-j)<=1) continue;\n      const c=poly[j], d=poly[(j+1)%poly.length];\n      if(i===0 && j===poly.length-1) continue; // shared endpoint\n      if(segInt(a,b,c,d)){\n        errors.push({ code: ValidationErrorCodes.SELF_INTERSECTION, message: `Self intersection between edges ${i}-${i+1} and ${j}-${j+1}` });\n        i=poly.length; break;\n      }\n    }\n  }\n  return errors;\n}\n"],
  "mappings": "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",
  "names": ["samePt", "area", "path"]
}
